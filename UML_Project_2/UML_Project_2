-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.profession
(
    prof_id bigserial NOT NULL,
    profession character varying(50),
    PRIMARY KEY (prof_id)
);

SELECT * FROM profession;

INSERT INTO profession (profession)
VALUES
('Doctor'),
('Actor'),
('Architect'),
('Lawyer'),
('Teacher');

CREATE TABLE IF NOT EXISTS public.zip_code
(
    zip_code numeric(4, 0) NOT NULL,
    province character varying(50),
    city character varying(50),
    PRIMARY KEY (zip_code)
);

SELECT * FROM zip_code;

INSERT INTO zip_code (zip_code, province, city)
VALUES
(1560, 'Gauteng', 'Pretoria'),
(1561, 'Gauteng', 'Johannesburg'),
(9300, 'Free State', 'Bloemfontein'),
(9500, 'Free State', 'Kroonstad'),
(7550, 'Cape Town', 'Durbanville'),
(7499, 'Cape Town', 'Parow'),
(4001, 'Kwazulu-Natal', 'Durban'),
(4420, 'Kwazulu-Natal', 'Ballito');

INSERT INTO zip_code (zip_code, province, city)
VALUES
(83011, 'Northen Cape', 'Kimberley')
;

CREATE TABLE IF NOT EXISTS public.status
(
    status_id bigserial NOT NULL,
    status character varying(50),
    PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public.contact_interest
(
    contact_id bigint NOT NULL,
    interest_id bigint NOT NULL,
    PRIMARY KEY (contact_id, interest_id)
);

CREATE TABLE IF NOT EXISTS public.interests
(
    interest_id bigserial NOT NULL,
    interest character varying(50),
    PRIMARY KEY (interest_id)
);

CREATE TABLE IF NOT EXISTS public.contact_seeking
(
    contact_id bigint NOT NULL,
    seeking_id bigint NOT NULL,
    PRIMARY KEY (contact_id, seeking_id)
);

CREATE TABLE IF NOT EXISTS public.seeking
(
    seeking_id bigserial NOT NULL,
    seeking character varying(50),
    PRIMARY KEY (seeking_id)
);

CREATE TABLE IF NOT EXISTS public.contact_id
(
    contact_id bigserial NOT NULL,
    last_name character varying(50),
    first_name character varying(50),
    phone bigint,
    email character varying(50),
    gender character varying(50),
    birthday character varying(50)[],
    prof_id bigint NOT NULL,
    zip_code bigint NOT NULL,
    status_id bigint NOT NULL,
    PRIMARY KEY (contact_id)
);

ALTER TABLE IF EXISTS public.contact_interest
    ADD CONSTRAINT interest_id FOREIGN KEY (interest_id)
    REFERENCES public.interests (interest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD CONSTRAINT contact_interest FOREIGN KEY (contact_id)
    REFERENCES public.contact_id (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD CONSTRAINT seeking_id FOREIGN KEY (seeking_id)
    REFERENCES public.seeking (seeking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD CONSTRAINT contact_seeking FOREIGN KEY (contact_id)
    REFERENCES public.contact_id (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT prof_id FOREIGN KEY (prof_id)
    REFERENCES public.profession (prof_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT zip_code FOREIGN KEY (zip_code)
    REFERENCES public.zip_code (zip_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT status_id FOREIGN KEY (status_id)
    REFERENCES public.status (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;