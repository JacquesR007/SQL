-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.profession
(
    prof_id bigserial NOT NULL,
    profession character varying(50),
    CONSTRAINT prof_id UNIQUE (prof_id),
    PRIMARY KEY (prof_id)
);


SELECT * FROM profession;

INSERT INTO profession (profession)
VALUES
('Doctor'),
('Actor'),
('Architect'),
('Lawyer'),
('Teacher');

CREATE TABLE IF NOT EXISTS public.zip_code
(
    zip_code bigint NOT NULL CHECK (zip_code < 9999 AND zip_code >999),
    province character varying(50),
    city character varying(50),
    PRIMARY KEY (zip_code)
);

SELECT * FROM zip_code;

INSERT INTO zip_code (zip_code, province, city)
VALUES
(1560, 'Gauteng', 'Pretoria'),
(1561, 'Gauteng', 'Johannesburg'),
(9300, 'Free State', 'Bloemfontein'),
(9500, 'Free State', 'Kroonstad'),
(7550, 'Cape Town', 'Durbanville'),
(7499, 'Cape Town', 'Parow'),
(4001, 'Kwazulu-Natal', 'Durban'),
(4420, 'Kwazulu-Natal', 'Ballito');

INSERT INTO zip_code (zip_code, province, city)
VALUES
(83011, 'Northen Cape', 'Kimberley')
;

INSERT INTO zip_code (zip_code, province, city)
VALUES
(300, 'Northen Cape', 'Kimberley')
;

CREATE TABLE IF NOT EXISTS public.status
(
    status_id bigserial NOT NULL,
    status character varying(50),
    PRIMARY KEY (status_id)
);

SELECT * FROM status; 

INSERT INTO status (status)
VALUES
('Single'),
('Divorced'),
('Widowed'),
('It is Complicated');

CREATE TABLE IF NOT EXISTS public.contact_interest
(
    contact_id bigint NOT NULL,
    interest_id bigint NOT NULL
);


SELECT * FROM contact_interest; 

INSERT INTO contact_interest (contact_id, interest_id)
VALUES
(1,1),
(1,2),
(2,2),
(2,3),
(3,3),
(3,4),
(4,4),
(4,5),
(5,5),
(5,6),
(6,6),
(6,7),
(7,7),
(7,8),
(8,8),
(8,1),
(9,5),
(9,2),
(10,4),
(10,3)
;

DELETE FROM contact_interest;

CREATE TABLE IF NOT EXISTS public.interests
(
    interest_id bigserial NOT NULL,
    interest character varying(50),
    PRIMARY KEY (interest_id)
);

SELECT * FROM interests; 

INSERT INTO interests (interest)
VALUES
('Rugby'),
('Reading'),
('Swimming'),
('Walking on the beach'),
('Role-play'),
('Art'),
('Chess'),
('Cooking');

CREATE TABLE IF NOT EXISTS public.contact_seeking
(
    contact_id bigint NOT NULL,
    seeking_id bigint NOT NULL
);

SELECT * FROM contact_seeking; 

INSERT INTO contact_seeking (contact_id, seeking_id)
VALUES
(1,1),
(2,2),
(3,3),
(4,4),
(5,5),
(6,1),
(7,2),
(8,3),
(9,4),
(10,5)
;

DELETE FROM contact_seeking;

CREATE TABLE IF NOT EXISTS public.seeking
(
    seeking_id bigserial NOT NULL,
    seeking character varying(50),
    PRIMARY KEY (seeking_id)
);

SELECT * FROM seeking; 

INSERT INTO seeking (seeking)
VALUES
('Relationship'),
('Friendship'),
('Costume partner'),
('Friends with benefits'),
('Someone to talk to');

CREATE TABLE IF NOT EXISTS public.contact_id
(
    contact_id bigserial NOT NULL,
    last_name character varying(50),
    first_name character varying(50),
    phone bigint,
    email character varying(50),
    gender character varying(50),
    birthday date,
    prof_id bigint NOT NULL,
    zip_code bigint NOT NULL,
    status_id bigint NOT NULL,
    PRIMARY KEY (contact_id)
);

SELECT * FROM contact_id; 

INSERT INTO contact_id (last_name ,first_name , phone ,email ,gender ,birthday ,prof_id ,zip_code ,status_id )
VALUES
('Rossouw', 'Jacques', '+27832923307', 'jacques@gmail.com', 'Male', '1995-07-21', 1, 1560, 1),
('Kritzinger', 'Khyla', '+278545126352', 'khyla@gmail.com', 'Female', '1996-01-05', 2, 1560, 1),
('Fox', 'Megan', '+2775485632589', 'megan@gmail.com', 'Female', '1895-09-07', 3, 1561, 2),
('Sparrow', 'Jack', '+2784154425639', 'jack@gmail.com', 'Male', '1999-12-14', 4, 9300, 3),
('Bob', 'Sponge', '+2778447896582', 'sponge@gmail.com', 'Other', '1988-03-22', 5, 9500, 2),
('Poppins', 'Mary', '+278412026359', 'mary@gmail.com', 'Female', '1975-04-13', 2, 7550, 1),
('Rock', 'Chris', '+278214788745', 'chris@gmail.com', 'Male', '1986-11-09', 5, 7499, 1),
('Wonder', 'Stevie', '+278351632807', 'stevie@gmail.com', 'Male', '1905-08-02', 3, 4001, 3),
('Bean', 'Mr.', '+277201542369', 'bean@gmail.com', 'Rather not say', '1881-06-28', 1, 4420, 4),
('Moolman', 'Johan', '+278777555231', 'johan@gmail.com', 'Male', '1898-02-11', 2, 1560, 1);

DELETE FROM contact_id;

--incorect prof_id
INSERT INTO contact_id (last_name ,first_name , phone ,email ,gender ,birthday ,prof_id ,zip_code ,status_id )
VALUES
('Rossouw', 'Jacques', '+27832923307', 'jacques@gmail.com', 'Male', '1995-07-21', 10, 1560, 1);

--incorect zip_zode
INSERT INTO contact_id (last_name ,first_name , phone ,email ,gender ,birthday ,prof_id ,zip_code ,status_id )
VALUES
('Rossouw', 'Jacques', '+27832923307', 'jacques@gmail.com', 'Male', '1995-07-21', 1, 1000, 1);

--incorect status
INSERT INTO contact_id (last_name ,first_name , phone ,email ,gender ,birthday ,prof_id ,zip_code ,status_id )
VALUES
('Rossouw', 'Jacques', '+27832923307', 'jacques@gmail.com', 'Male', '1995-07-21', 1, 1560, 100);

ALTER TABLE IF EXISTS public.contact_interest
    ADD CONSTRAINT contact_id FOREIGN KEY (contact_id)
    REFERENCES public.contact_id (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD CONSTRAINT interest_id FOREIGN KEY (interest_id)
    REFERENCES public.interests (interest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD CONSTRAINT contact_id FOREIGN KEY (contact_id)
    REFERENCES public.contact_id (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD CONSTRAINT contact_seeking FOREIGN KEY (seeking_id)
    REFERENCES public.seeking (seeking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT prof_id FOREIGN KEY (prof_id)
    REFERENCES public.profession (prof_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT zip_code FOREIGN KEY (zip_code)
    REFERENCES public.zip_code (zip_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD CONSTRAINT status_id FOREIGN KEY (status_id)
    REFERENCES public.status (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD FOREIGN KEY (prof_id)
    REFERENCES public.profession (prof_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD FOREIGN KEY (zip_code)
    REFERENCES public.zip_code (zip_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_id
    ADD FOREIGN KEY (status_id)
    REFERENCES public.status (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
    
--INNER JOIN--

SELECT 
mc.last_name,
mc.first_name,
mc.phone,
mc.email,
mc.gender,
mc.birthday,
prof.profession,
z.city,
z.province,
s.status

FROM contact_id AS mc

INNER JOIN profession AS prof
ON mc.prof_id = prof.prof_id

INNER JOIN zip_code AS z
ON mc.zip_code = z.zip_code

INNER JOIN status AS s
ON mc.status_id = s.status_id;

--INTERESTS INNER JOIN--

SELECT *
FROM contact_id AS mc

INNER JOIN contact_interest
ON mc.contact_id = contact_interest.contact_id

INNER JOIN interests
ON contact_interest.interest_id = interests.interest_id;

--SEEKING INNER JOIN

SELECT *
FROM contact_id AS mc

INNER JOIN contact_seeking
ON mc.contact_id = contact_seeking.contact_id

INNER JOIN seeking
ON contact_seeking.seeking_id = seeking.seeking_id;

--INNER JOIN ALL--

SELECT 
mc.last_name,
mc.first_name,
mc.phone,
mc.email,
mc.gender,
mc.birthday,
prof.profession,
z.city,
z.province,
s.status,
seeking.seeking,
interests.interest

FROM contact_id AS mc

INNER JOIN profession AS prof
ON mc.prof_id = prof.prof_id

INNER JOIN zip_code AS z
ON mc.zip_code = z.zip_code

INNER JOIN status AS s
ON mc.status_id = s.status_id

INNER JOIN contact_interest
ON mc.contact_id = contact_interest.contact_id

INNER JOIN interests
ON contact_interest.interest_id = interests.interest_id

INNER JOIN contact_seeking
ON mc.contact_id = contact_seeking.contact_id

INNER JOIN seeking
ON contact_seeking.seeking_id = seeking.seeking_id;

END;